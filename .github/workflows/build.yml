name: Build And Push Docker Image

on:
  push:
    branches:
      - master

env:
  DOCKER_BUILDKIT: 1
  IMAGE_CACHE_DIR: tmp/docker/cache

jobs:
  build:
    name: Build And Push Docker Image
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        service: [api]

    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v2

      - name: Get Version
        id: version
        run: |
          echo ::set-output name=source_branch::${GITHUB_REF#refs/heads/}
          echo ::set-output name=source_tag::${GITHUB_REF#refs/tags/}

      - name: Configure AWS credentials
        id: aws-cred
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Cache References : https://github.com/actions/cache/pull/37/files
      - name: Cache Docker Image
        id: cache
        uses: actions/cache@v2.1.4
        with:
          path: ${{ env.IMAGE_CACHE_DIR }}
          key: ${{ runner.os }}-${{ matrix.service }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.service }}-

      - name: Load Cache
        id: load
        run: |
          if [ -d "${IMAGE_CACHE_DIR}" ]; then
            cat ${IMAGE_CACHE_DIR}/x* > image.tar
            docker load < image.tar
            rm -rf ${IMAGE_CACHE_DIR}
          fi

      - name: Build and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: mintak/qiitawrapper/${{ matrix.service }}
          DOCKER_FILE: deployment/dockerfile/${{ matrix.service }}/Dockerfile
          IMAGE_TAG: ${{ steps.version.outputs.source_branch }}-${{ github.sha }}
        run: |
          docker build -f ${DOCKER_FILE} --cache-from image -t ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG} .
          docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}

      - name: Logout From Amazon ECR
        id: logout-ecr
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

      - name: Push to GitHub Container Registry
        id: push-ghcr
        env:
          DOCKER_FILE: deployment/dockerfile/${{ matrix.service }}/Dockerfile
          IMAGE_TAG: ${{ steps.version.outputs.source_branch }}-${{ github.sha }}
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.service }}
          dockerfile: ${{ env.DOCKER_FILE }}
          tags: ${{ env.IMAGE_TAG }}
