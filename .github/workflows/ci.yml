name: Unit Test

on:
  push:
    branches:
      - master
  pull_request:

env:
  go-version: 1.17

jobs:
  go-lint:
    name: Go Lint
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v2

      - name: Lint
        id: lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          go_version: ${{ env.go-version }}
          golangci_lint_flags: "-c .golangci.yml"
          reporter: github-pr-review
          filter_mode: nofilter
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_error: true

  go-unit-test:
    name: Go Unit Test
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Golang
        id: setup
        uses: actions/setup-go@v2.1.5
        with:
          go-version: ${{ env.go-version }}

      - name: Checkout code
        id: checkout
        uses: actions/checkout@v2

      - name: Unit Test
        id: test
        run: go test ./... -cover -coverprofile=./cover.out

      - uses: codecov/codecov-action@v3
        with:
          file: ./cover.out
          flags: unittests
          name: codecov-umbrella # optional
          fail_ci_if_error: false

  dockerfile-lint:
    name: Dockerfile Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v2

      - name: Lint
        id: lint
        uses: reviewdog/action-hadolint@v1
        with:
          reporter: github-pr-review
          filter_mode: nofilter
          fail_on_error: true
